name: Destroy Infrastructure

on:
  workflow_dispatch:

jobs:
  destroy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          cd terraform/environments/dev
          terraform init

      - name: Clean Up CloudFront
        run: |
          # First disable distributions
          for DIST_ID in E7B71H3JZDHLH E1R89VII6SDI4C; do
            aws cloudfront get-distribution-config --id $DIST_ID > config.json
            ETAG=$(aws cloudfront get-distribution-config --id $DIST_ID --query 'ETag' --output text)
            jq '.DistributionConfig.Enabled = false' config.json > new_config.json
            aws cloudfront update-distribution --id $DIST_ID --if-match "$ETAG" --distribution-config file://new_config.json
            sleep 30
          done

      - name: Clean Up IAM
        run: |
          # Delete IAM user policies
          aws iam list-user-policies --user-name recipe-customer-dev | jq -r '.PolicyNames[]' | while read policy; do
            aws iam delete-user-policy --user-name recipe-customer-dev --policy-name "$policy"
          done
          
          # Delete IAM user
          aws iam delete-user --user-name recipe-customer-dev || true

      - name: Clean Up CloudWatch
        run: |
          # Delete CloudWatch Log Groups
          aws logs delete-log-group --log-group-name /aws/lambda/recipe_processor_dev || true
          
          # Delete CloudWatch Alarms
          aws cloudwatch delete-alarms --alarm-names CIRCU-LI-ION-lambda-errors || true

      - name: Clean Up SNS
        run: |
          # Delete SNS topics
          aws sns delete-topic --topic-arn $(aws sns list-topics --query 'Topics[?contains(TopicArn,`lambda-alerts-dev`)].[TopicArn]' --output text) || true

      - name: Wait for CloudFront
        run: |
          sleep 300  # Wait 5 minutes for CloudFront to disable

      - name: Delete CloudFront
        run: |
          for DIST_ID in E7B71H3JZDHLH E1R89VII6SDI4C; do
            ETAG=$(aws cloudfront get-distribution --id $DIST_ID --query 'Distribution.ETag' --output text)
            aws cloudfront delete-distribution --id $DIST_ID --if-match "$ETAG" || true
          done

      - name: Final Resource Cleanup
        run: |
          # Delete any remaining Lambda functions
          aws lambda delete-function --function-name recipe_processor_dev || true
          
          # Delete any remaining S3 buckets
          aws s3 rb s3://recipe-storage-dev --force || true
          
          # Delete any remaining CloudFront Origin Access Identities
          for OAI in E3J41MD19IG6S E3JVHJN7DHO9I2; do
            aws cloudfront delete-cloud-front-origin-access-identity --id $OAI --if-match $(aws cloudfront get-cloud-front-origin-access-identity --id $OAI --query 'ETag' --output text) || true
          done